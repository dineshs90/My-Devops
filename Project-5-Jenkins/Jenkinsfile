def dockerImage

pipeline{
    agent any
    environment{
        Docker_Image="dinesh790/golang-dockercompose"
        ImageTag="build-${BUILD_NUMBER}"
        Deployment_File="/tmp/deployment.yaml"
        Docker_Credentials='ssh-docker-global'
        Github_Credentials='ssh-github-global'
        remoteHost = "127.0.0.1"
        remoteUser = "osboxes"
        Github_Url="git@github.com:dineshs90/My-Devops.git"
        
    }

    stages{
        stage('Git Clone'){
            steps{
                git url: Github_Url, 
                    branch: 'main',
                    credentialsId: Github_Credentials
            }
        }

        stage('Build Docker Image'){
            steps{
                script{
                    dockerImage=docker.build("${Docker_Image}:${ImageTag}","Project-5-Jenkins/")
                }
            }
        }

        stage('Docker Login & Push Image'){
            steps{
                script{
                    docker.withRegistry("https://index.docker.io/v1/",Docker_Credentials){
                        dockerImage.push("${ImageTag}")
                    }
                }
            }
        }

        stage('Remote Deploy via ssh & Run Container'){
            steps{
                script{
                    
                    //def imageName = "${Docker_Image}:${ImageTag}"

                    sshagent(['ssh-remote-global']){
                        //Copy deployment.yaml to remote
                        sh "scp -o StrictHostKeyChecking=no Project-5-Jenkins/deployment.yaml osboxes@127.0.0.1:/tmp/"

                        //Apply for remote

                         sh "ssh ${remoteUser}@${remoteHost} 'kubectl apply -f ${Deployment_File}'"

                        //Image change
                         sh "ssh ${remoteUser}@${remoteHost} 'kubectl set image deployment/golang-deployment golang-pod=${Docker_Image}:${ImageTag}'"
                         //cleanup
                         sh "ssh ${remoteUser}@${remoteHost} 'rm -f ${Deployment_File}'"
                    }

                }
            }
        }

        stage('validate'){
            steps{

                sh "ssh ${remoteUser}@${remoteHost} 'kubectl get deployment'"
                sh "ssh ${remoteUser}@${remoteHost} 'kubectl get pods'"
                sh "ssh ${remoteUser}@${remoteHost} 'kubectl get svc'"
                sh "ssh ${remoteUser}@${remoteHost} 'kubectl get nodes -o wide'"
                //sh 'curl http://localhost:8085/health'
            }
        }
    }
}