apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-deployment
  namespace: monitoring
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 # Ensure no pod downtime
      maxSurge: 1 # Add 1 pod before deleting old one  
  selector:
    matchLabels:
      name: go-dep
  template:
    metadata:
      labels:
        name: go-dep
    spec:
      containers:
        - name: golang-pod
          image: dinesh790/golang-dockercompose:{{TAG}} # image pulled from dockerhub
          imagePullPolicy: Always # To avoid cached image
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10              


---
apiVersion: v1
kind: Service
metadata:
  name: golang-service
  namespace: monitoring  
spec:
  type: NodePort
  selector:
      name: go-dep
  ports:    
    - port: 8080
      targetPort: 8080
      nodePort: 30080
